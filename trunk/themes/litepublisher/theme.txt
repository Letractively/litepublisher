* Lite Publisher
* Copyright (C) 2010 Vladimir Yushko http://litepublisher.com/
* Dual licensed under the MIT (mit.txt)
* and GPL (gpl.txt) licenses.

если вы неопытный пользователь и все описанное ниже для вас сложно, то ни в коем случае не используйте эту тему - более чем вероятно, что вы нарушите работоспособность сайта.

Эксперементальная дочерняя тема от темы по умолчанию default. Как известно, все темы имеют в качестве предка тему по умолчанию, поэтому в about.ini не нужно пописывать parent = default, потому что это это значение является значением по умолчанию. Эта тема немного отличается от родительской, прежде всего фоновой подгрузкой javascript при открытии страниц. Чтобы эта тема смогла работать следует отредактировать секцию head в админке (Вид/Секция head) удалив или закомментировав все строки начиная со строки
<script type="text/javascript" src="$site.files/js/litepublisher/litepublisher.min.js"></script>

Поскольку такое удаление кода приведет к неработоспособности всех остальных тем, то следует во всех видах сменить тему на эту эксперементальную. Чтобы восстановить старые темы в видах необходимо восстановить удаленный код в секции head (или раскомментировать, если ранее закомментировали). На всякий случай полностью приведу стандартный код, который нужно удалить из ссекции head
  <script type="text/javascript" src="$site.files/js/litepublisher/litepublisher.min.js"></script>
  <link type="text/css" href="$site.files/js/prettyphoto/css/prettyPhoto.css" rel="stylesheet" />
  <script type="text/javascript">
  $(document).ready(function() {
    $("a[rel^='prettyPhoto']").prettyPhoto();
  });
  </script>

Некоторые плагины могут добавлять в секцию head свои строки, то их следует оставить. Общий шаблон страницы немного отличается от родительской темы, подключим его таким же самым образом:

$template = {@import(index.tml)}

Если посмотреть файл index.tml то там увидим немного измененную секцию head, где подключается скрипт фоновой загрузки loader.min.js, а далее используется функция load_script, которая собствено и подружает javascript. Также из шаблона меню в секцию head перенес скрипт поддержки всплывающего меню, поэтому необходимо переписать шаблон меню, удалив оттуда javascript:

$template.menu = [<ul id="nav">
  $item
</ul>]

Остаются еще шаблоны, где подключаются javascript, перепишим их:

content.post.templatecomments.form = [
  <script type="text/javascript">$.load_script("$site.files$template.jsmerger_comments");</script>
								<p id="respond">$lang.leavereply</>
								<form action="$options.url/send-comment.php" method="post" id="commentform">
									<p><input type="text" name="name" id="name" value="$name" size="22" tabindex="1" />
									<label for="name">$lang.name</label></p>

									<p><input type="text" name="email" id="email" value="$email" size="22" tabindex="2" />
									<label for="email">$lang.email</label></p>

									<p><input type="text" name="url" id="url" value="$url" size="22" tabindex="3" />
									<label for="url">$lang.url</label></p>

									<p><input type="checkbox" name="subscribe" id="subscribe" $subscribe size="22" tabindex="4" />
									<label for="subscribe">$lang.subscribe</label></p>

									<p><textarea name="content" id="comment" rows="10" cols="60%" tabindex="5"></textarea></p>

									<input type="hidden" name="postid" value="$postid" />
									<input type="hidden" name="antispam" value="$antispam" />

									<p><input name="submit" type="submit" id="submit" tabindex="6" value="$lang.send" /></p>
								</form>
]

Эта была форма отправки комментариев, далее форма модерирования:

content.post.templatecomments.moderateform= [
		<script type="text/javascript">$.load_script("$site.files$template.jsmerger_moderate");</script>
								<form name="moderateform" id="moderateform" action="$options.url/admin/comments/" method="post">
								$comments
								<p>
								<input type="button" name="approvebutton" value="$lang.approve" onclick="submitmoderateform(this.form, 'approved');" />
								<input type="button" name="deletebutton" value="$lang.delete" onclick="submitmoderateform(this.form, 'delete');" />
								<input type="button" name="holdbutton" value="$lang.holdbutton" onclick="submitmoderateform(this.form, 'hold');" />
								<input type="button" value="$lang.sendreply" onclick="sendreply();" />
								</p>
								</form>
]

Теперь для себя лично я решил убрать кнопки модерирования в каждом комментарии,, точнее сделать их в виде аяксового блока - будет буква М, по клику по которой будут появляться индвидуальные кнопки.
content.post.templatecomments.comments.comment.moderate = [
 <div class="moderationbuttons">
  <input type="checkbox" name="checkbox-comment-$comment.id" id="checkbox-comment-$comment.id" value="$comment.id" />
<a rel="inlinewidget" href="#">M</a>
<!--
													  <input type="button" value="$lang.approve" onclick="setcommentstatus($comment.id, 'approved');" />
  <input type="button" value="$lang.holdbutton" onclick="setcommentstatus($comment.id, 'hold');" />
  <input type="button" value="$lang.delete" onclick="deletecomment($comment.id);" />
  <input type="button" value="$lang.edit" onclick="editcomment($comment.id);" />
-->
 </div>
]



Все, больше никаких изменений в теме нет.