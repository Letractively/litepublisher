[document]
type = manual
name = theme
title = "Как устроена тема"
description = 'Одним из самых часто задаваемых вопросов являются вопросы об устройстве темы движка. Сразу надо заметить, что шаблоны темы устроены просто и дают вэбмастеру свободу творчества. И так ключевые факты:

- тема это html, в котором отсутствует исполняемый php код
- все шаблоны темы умещаются в одном файле index.tml (безусловно, речь не идет о стилях и картинках, только html)
- в шаблонах используются теги вида $object.property (по русски $объект.свойство)
- для разделения шаблонов используются html комментарии вида <code><!--section-->...любой html или другие шаблоны...<!--/section--></code>

Разберем детально на примере темы по умолчанию, которая находится в папке <a href="/source/themes/default/">themes/default</a> дистрибутива. Если все упростить то тема устроена следующем образом:

- меню
- контент
- два сайтбара с виджетами
- подвал

Вот реальный пример, взята тема по умолчанию и из нее для понимания я вырезал все шаблоны. Используются глобальные объекты $options и $template, которые всегда доступны в шаблоне.

<code>
<body>
	<div id="header"><div id="logo"><span class="name"><a href="$options.url/">$options.name</a></span><span class="slogan">$options.description</span>
</div></div>
	<div id="topmenu">
$template.menu
</div>
<div id="out">
<div id="middle">
	<div id="content">
$template.content
	</div>
	<div id="sidebar">
$template.sitebar
	</div>
		
	<div id="footer">
	<div id="bottom">
	<ul id="footerbar">
$template.sitebar
	</ul>
		
			<div id="copyright"><span class="blogolet"><a href="$options.url$options.home">$options.name</a></span>$template.footer</div>
	</div>
</div>
</div>
</div>	
</body>
</code>

В других документах я подробнее опишу свойства каждого объекта, но сейчас думаю, что каждому понятно, что 

- $options.url адрес сайта без завершающего слеша (/)
- $options.name название сайта
- $options.description краткое описание сайта
- $template.menu список меню
- $template.content это индивидуальный контент каждой страницы
- $template.sitebar сайтбар
- $template.footer подпись в подвале

Если вы сохраните приведенный пример (не забыв включить в него секцию head), то такой шаблон может работать, но правда для полноценной работы темы придется откуда то взять шаблоны меню, контента и сайтбаров. Эта задача решается при помощи секций html комментариев, например шаблон контента заключен секции content:

<code>
<!--content-->
..шаблоны контента...
<!--/content-->
</code>


на верхнем уровне находятся следующие шаблоны:

- title шаблон заголовка страницы, используется редко
- menulist шаблон списка меню ( в content есть шаблон menu, не путать)
- content много шаблонов
- sitebar шаблон сайтбара и виджетов в нем
Шаблон title заголовка страницы используется редко, в теме по умолчанию отсутствует. Если посмотрите секцию head темы, то там будет 

<code>	<title>$template.title</title></code> 

Если шаблон title отсутствует, то берется неявный шаблон заголовка, он следующий:

<code><title>
<!--title-->$title | $options.name<!--/title-->
</title></code>

Разборщик (наверно можно даже сказать компилятор) темы ищет шаблон <code><!--title-->...<!--/title--></code>, если он находит секцию, то он ее заменяет на $template.title, если шаблон title не найден, то замены не происходит, и шаблон для title устанавливается в $title | $options.name

Понятно, что таким образом шаблон title не является обязательным шаблоном: вы можете его не задавать, тогда будет использовано значение по умолчанию, а если укажите его при помощи секции html комментариев, то не нужно прописывать $template.title. Следует указывать что либо одно: либо тег $template.title, либо шаблон в секции.

Таким образом шаблоны можно разделить на две неявные группы: 

- обязательные, их наличие требуется и отсутствие приведет к ошибке
- опциональные, где отсутствие не является критическим, и как правило берется значение по умолчанию

Сами же теги $object.property не являются ни обязательными, ни опциональными, поскольку их наличие или отсутствие диктуется лишь фантазией вэбмастера: если хочется вэбмастеру, чтобы у страниц был пустой заголовок, то пусть нигде не указывает $template.title'