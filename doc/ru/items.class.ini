[document]
type = class
name =  titems
parent = tevents
source = lib/items.class.php
dependent = litepublisher, tclasses
description = "Базовый класс для хранения списков, массивов. Одновременно работает с базами и файлами. Имеет целый ряд методов для управления элементами списка"

[method]
name = __construct
type = void
access = public
description = "Конструктор класса. инициализирует события, связывает свойства с массивом [[data]] и вызывает метод [[load]] для загрузки данных класса. Родительский класс [[tdata]] в конструкторе не загружает данные, это делает класс [[tevents]]."

[method]
name = create
type = void
access = protected
description = "Добавляет в [[map]] массивы [[events]] и [[coclasses]]. Смотрите обяснения про [[map]], [[assignmap]], [[addmap]]"

[method]
name = free
type = void
access = public
description = "Удаляет объект из глобального списка объектов. Также вызывает метод [[free]] у всех обектов массива ]]coinstances]]"

[method]
name = assignmap
type = void
access = public
description = "Связывает элементы массива [[data]] с декларированными свойствами обеъкта. Информация о связях между именами ключей и свойствами находятся в массиве [[map]]"

[method]
name = afterload
type = void
access = public
description = "Вызывается после загрузки данных. Вызывает метод [[assignmap]] для связывания загруженных свойств с деклаированными свойствами. Также создает массив объектов [[coinstancess]] из имен классов массива ]]coclasses]], которые были загружены вместе с остальными данными"

[method]
name = addmap
type = void
access = public
description = "Добавляет в массив [[map]] имя свойства и его значение по умолчанию, а также присваеивает это значение ключу в массиве [[data]] и связывает декларируемое свойство с элементом массива."

[method]
name = __get
type = mixed
access = public
description = "Волшебный метод php. Перед вызовом родительского метода [[tdata::__get]] проверяет наличие одноименного метода в объекте. Если тметод с тем же именем существует, то возвращает ассоциатвный массив с двумя ключами **class** и **func**, где соответствено имя класса и имя метода. Применяется для подписки на события других объектов."

[method]
name = __set
type = void
access = public
description = "Волшебный метод php. Если родительский метод [[tdata::__set]] не нашел свойство, то проверяется существование события с именем свойства. Если событие существует, то происходит подписка на событие. Иначе вызывается [[error]] для сообщения об ошибкею, что свойство не найдено"

[method]
name = __call
type = mixed
access = public
description = Если существует событие с именем вызываемого метода, то вызывается метод [[callevent]] для вызова обработчиков событиия, иначе вызывается родительский метод"

[method]
name = addevents
type = void
access = public
description = "Добавляет имена событий в массив [[eventnames]]. Этот метод принимает неопределенное количество аргументов, где каждый аргумент - это имя добавляемого события"

[method]
name = callevent
type = mixed
access = protected
description = "Вызывает по очереди всех обработчиков (другими словами подписчиков) на событие. Поскольку подписчиков может быть несколько, то цикл вызовов обработчиков может быть прекращен внутри любого из подписчиков. Для прекращения обработки события подписчик создает исключение [[ECancelEvent]]. Возвращает результат последнего обработчика либо свойство [[ECancelEvent::result]] если было исключение [[ECancelEvent]]. Для создания исключения смотрите [[cancelevent]]"

[method]
name = cancelevent
type = void
access = public
description =  "Статический метод, Создает исключение ECancelEvent для прекращения обработки событий. Рекомендуется вызывать именно этот метод для прекращения обработки событий, а не прямо создавать исключение"

[method]
name = setevent
type = void
access = public
description = "Проверяет существование события и добавляет обработчик на событие в массив [[events]]. Если события не существует, то вызывается [[error]] с сообщением о нсуществующем событии"

[method]
name = dosetevent
type = void
access = protected
description = "Добавляет обработчик события, ппроверяет только на копию такого обработчика, больше проверок не делает."

[method]
name = delete_event_class
type = boolean
access = public
description = "Удаляет из события опервого обработчика с заданным именем класса. Возвращает true если был и удаллен обработчик, false если не было такого обработчика"

[method]
name = unsubscribeclass
type = void
access = public
description = "Удаляет всех обработчиков событий для класса этого объекта, вызывая [[unsubscribeclassname]]"


[method]
name = unsubscribeclassname
type = void
access = public
description = "Удаляет всех обработчиков событий класса"

[method]
name = seteventorder
type = void
access = public
description = "Меняет очередность вызова обработчика события. Обработчики вызываются в в том порядке, в котором были добавлены. Метод используется, если требуется поднять или опустить обработчик в очереди обработчиков."

[method]
name = addcoclass
type = void
access = public
description = "Добавляет имя класса в массив [[coclasses]], создает экземпляр класса и добавляет его в массив [[coinstancess]]."


[method]
name = deletecoclass
type = void
access = public
description = "Удаляет имя класса из массива [[coclasses]]".

[property]
name = events
type = array
access = protected
description = 'Ассоциативный массив событий. Ключ - это имя события, значение - массив обработчиков события. Обработчик события - это пара имя класса и его метод, которые будут вызваны при возникновении события. На одно событие может быть подписано несколько обработчиков. Если во время вызовов цепочки  обработчиков не будет найден класс, то такой обработчик будет удален из массива.'

name = eventnames
type = array
access = protected
description = "Массив имен событий. Попытка добавить обработчик на событие, имя которого отсутствует в этом списке приведет к исключению"

name = map
type = array
access = protected
description = "Массив связей между декларированными свойствами класса и ключами массива [[data]]"